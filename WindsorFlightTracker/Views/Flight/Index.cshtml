@model Traffic

<p>Time:@Model.time</p>
<div id="map" name="map" style="height:500px;width:auto"></div>

<script>
    var map = L.map('map');
    map.fitBounds([
        [41.997, -84.001],
        [42.798, -82.202]
    ]);
    var planeIcon = L.icon({
            iconUrl: "./flight_black_24dp.png",

            iconSize: [21, 21],
            iconAnchor: [0, 0],
            shadowAnchor: [0, 0],
            popupAnchor: [0, 0]
    });
    L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
        maxZoom: 18,
        id: 'mapbox/streets-v11',
        tileSize: 512,
        zoomOffset: -1,
        accessToken: @Model.MapAPIKey
    }).addTo(map);
        @for (int i = 0; i < Model.Flights.Count; i++)
        {
           @: L.marker([@Model.Flights[i].Latitude,@Model.Flights[i].Longitude], { icon: planeIcon, rotationAngle:@Model.Flights[i].True_Track}).bindPopup("CallSign: @Model.Flights[i].CallSign <br/>Heading: @Model.Flights[i].Heading <br/>Altitude: @Model.Flights[i].Baro_Alt <br/>Vertical Rate:@Html.Raw(Model.Flights[i].VrString) ft/min <br/>Speed: @Model.Flights[i].Velocity knots <br/>Squawk: @Model.Flights[i].Squawk").addTo(map);
        }
</script>
